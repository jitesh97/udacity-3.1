version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name my-stack
      - run: return 1
      - destroy_environment
        when: on_fail

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["0f:c3:bf:e4:55:e6:17:ce:66:2e:ac:0c:b7:97:c0:7f"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure servers
          command: |
            ansible-playbook -i inventory.txt playbook.yml

  smoke_test:
        docker:
          - image: alpine:latest
        steps:
          - run: apk add --update curl
          - run:
              name: smoke test.
              command: |
                URL="https://blog.udacity.com/"
                if curl -s --head ${URL} # test if blog.udacity. com exists
                then
                return 0
                else
                return 2
                fi
workflows:
  my_workflow:
    jobs:
    # - create_infrastructure
      - configure_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure
